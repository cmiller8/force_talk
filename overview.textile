
Start with a discussion about being a fan of 'everything is a remix'. Reference Kirby Ferguson movies. How creative works are almost always incremental modifications on previous pieces. This is true for music, movies, art, and I think visualizations as well. So this talk should provide some 'remixable' concepts and code pieces that you might be able to use in your own work.

Plus Amanda Cox says its ok, so its ok.

In the first section, we look at what it takes to build a force layout network in D3, starting with just nodes and no links. We see how nodes are an array of data points. How D3 layouts don't specify a particular visual representation, so we are free to visualize the nodes any way we want. Node charge and the force layout gravity are explained and demonstrated. 

With just this little bit of knowledge, we can already start abusing the force.

Next we talk about how to use the force layout to build a bubble chart, as used by the NY Times. We use data in our nodes to specify the radius of our bubbles. We rely on the ability of the force layout to take a function for the node charge attribute to make the charge force for each node data-based. Now we have a bubble chart.

Next, we want our bubble chart to move. This also comes from the NY Times example. This functionality is achieved by using 'custom forces' that are applied to each node during the 'tick' function of our force layout. To make this work, we need our custom force to be 'blended' in with the other forces/constraints that are working on each node. Typically, we don't want our force to dominate. This is where the 'alpha' parameter comes in. It can be thought of as a form of simulated annealing - slowly converging to a stable 'solution'. We use it by multiplying our forces movements by it.

The last bit of magic from the NYT bubble chart is that each color of node stays in its own 'band'. If we have one custom force, we can have multiple. Each can push around our nodes in a different way. 

So, bubbles are cool - but some times you don't want the bubbles to be able to mush and float around so much. You want more rigidity in your bubbles. We can expand the idea of a custom force to use it for collision detection and avoidance. We see how this functions in code, and see implementations in NY Times bubble cloud and my bubble cloud example.

The concept of alpha comes up here too. We can use it to determine how much to move back our nodes when they collide. 0.5 gives even blend. Higher numbers make bubbles rocket off one another. 

The collision code is done in a brute force manner - each node is compared to every other node in the layout. This is fine for small numbers of nodes, but can slow down significantly when you have a lot of nodes. The Quadtree data structure can be used to speed up this collision code - and any other calculation that requires comparing nodes that are physically close to one another.

Ok, we've got nodes. Let's add some links. Finally! Links, or edges, in a force layout constrain the nodes. They have a source and destination and can have other data associated with them too. 

Link Distance and Link Strength affect how links work. And these attributes, like the 'charge' attribute, can be data-driven. In fact that is what I did with visualizing the racial divide. Here, each census tract is connected to neighbors via invisible links. The link length is now determined by the difference in ratios of white/black populations between tracts. The idea here is that empty space between sharply dividing neighborhoods could tell us something about how these communities are affected. 

Another fun thing to do with links is remove them! This congressional voting visualization provides a good example. And the code behind it is easy - its the traditional selection lifecycle that is used everywhere in D3 code - update, enter, and exit.

Ok, lets take the concept of the 'custom force' applied to each node and see how it can be used to create whole new layouts using the force layout mechanics. 

First up, my circle-based layout examples. Talk about using sine/cosine for radial placement. 

Then look at the 'expanding center node' example - which kind of looks like a Kill Bill fight. 

Moritz Stefaner has some interesting adaptations of the force layout one is the use of an underlying grid that regulates the visual position of the nodes. There are actually two 'nodes' here - one is the one we see - which snaps to the grid. The other is used to position the visual node - and it is affected by neighboring node forces. I think it would be fun to explore this grid layout more. Think automatically generated transit maps. Similar to what Fathom has recently done with the MBTA locations.

We end with a rapid fire look at a few more examples of using the parameters for the force layout in interesting ways - from whimsical to more rigorous:

* is Obama president - uses custom force to simulate negative gravity - so balloons float. Also uses collision detection and expanding charge on hover. 
* Electro by Ziggy Jonsson uses the custom force idea - but lets the user specify the locations of the node foci. Messy, but interesting
* this idea is taken to a more production level with Disqus's new 'Gravity' screen - which groups topics of similar interest using the same mechanism, adding real-time updates. 
* shape of my library by Sarah Groff-Palermo uses collision and custom forces to provide quantitative visuals about categorical data.
* this idea is taken to the extreme with 'Visual Sedimentation' which tries to use the idea of particles in suspension to settle to visualize streaming data.

So hopefully we now have a greater understanding of the magic behind the force. 

So get out there and abuse the force today!

that's it!

h2. TODO

* implement multiple force on bubble chart
* code for grid layout
* code for force labels
* figure out ending
* implement ending

h2. Slide Ideas

* Intro to D3 Force "api":https://github.com/mbostock/d3/wiki/Force-Layout
** what makes a force directed layout - just bubbles
** source code for basic force
** multiple bubbles - "this demo":http://bl.ocks.org/1062383 has fun fly in
** gravity
** charge

* Bubble Chart
** gates bubble chart example?
** bubble chart code
** bubble chart example with overlap
** custom charge per node
** correct bubble chart
** nyt example?
** multiple custom forces

* Custom Forces
** node data - show what data nodes have
** code for custom tick force
** example - no alpha
** simulated annealing
** alpha
** example - alpha
** gates example
** multiple forces working - nyt example
** add version of gates that includes this tweak?

* Collision Detection
** nyt bubble cloud example
** book bubble cloud example
** basic collision code
** add mouse like in: http://bl.ocks.org/GerHobbelt/3116713 
** quadtrees
** quadtree view
** quadtree code
** book example
** word cloud quote

* Custom Nodes
** other symbols example: http://bl.ocks.org/mbostock/1062383
** images example: http://bl.ocks.org/mbostock/950642
** states force directed example: http://mbostock.github.com/d3/talk/20111018/force-states.html

* Nodes & Edges
** basic example
** code for basic example
** edge link
** edge strength
** data based edge strength
** racial divide map
** edge custom styles?
** curved edges?: http://bl.ocks.org/mbostock/4600693
** adding and removing edges
** senate social network: http://news.yahoo.com/senate-social-network-diagram-mcconnell-mean-girls-000513361.html
** game of thrones places: http://www.jeromecukier.net/projects/agot/places.html
** add/remove edges code

* Custom Layouts
** use of custom force
** moving between layouts
** flowing data example
** stowers collaboration example
** circle layout code
** spiral layout code?
** sunflower layout?

* More Custom Layouts
** clustered forces layout: http://bl.ocks.org/mbostock/1747543
** grid layout: http://moritzstefaner.github.com/gridexperiments/
** force directed labels?
** my other stowers attempts?

* Big Finish?!?
** Could be grid layout with NYC metro locations
** could be Nature of Code basic example... 

** hull on top of particle emitter ... synced to music?
** planaira moving about?

