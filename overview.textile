h2. Overview

Introduction. I work at a biomedical research institute analyzing genomic data for organisms like flies and worms. But for fun, I work on interactive data visualizations and write tutorials that focus on using D3 for web based data visualizations. And that is what I want to talk about today. 

Lets first set a baseline for what we are talking about. First basic definitions of what D3.js is. Then 

I am a big believer of the concept that 'everything is a remix'. Reference Kirby Ferguson movies. How creative works are almost always incremental modifications on previous pieces. This is true for music, movies, art, and I think visualizations as well. 

So this talk should provide some 'remixable' concepts and code pieces that you can think about combining and transforming in your own visualizations. 

Lets start with what it takes to make a force directed graph in D3. And lets just focus on only nodes to begin with.

D3 is all about binding data to visual elements. So our nodes are represented as data. 
The force layout in D3 is easy to get started with. You create a new instance, pass in your data for your nodes, and then start the layout to start the simulation. 
You also want to bind a function to the 'tick' event, which we will see in a bit - but allows you to have access to the state of the simulation at every iteration, every tick.

An important thing to know about D3 is that the layouts do not impose a specific visual on the layout. Rather it is up to you to define what the visual is. This makes it a bit of additional work to get things going, but allows the freedom of using whatever you want to visualize the layout with. In these examples, we are using SVG, and each node will be represented with a circle.

With just this little bit of knowledge, we can already start abusing the force.

Next we talk about how to use the force layout to build a bubble chart, as used by the NY Times. We use data in our nodes to specify the radius of our bubbles. We rely on the ability of the force layout to take a function for the node charge attribute to make the charge force for each node data-based. Now we have a bubble chart.

So thats cool. We've made a bubble chart by exploiting the charge of our nodes and just using radius to encode a variable. What else can we do?

Well, another thing that made the NYT example interesting was that you could split up the bubbles based on some categorical data - discretionary vs mandatory. So lets do that.

This functionality is achieved by using 'custom forces' that are applied to each node during the 'tick' function of our force layout. To make this work, we need our custom force to be 'blended' in with the other forces/constraints that are working on each node. Typically, we don't want our force to dominate. This is where the 'alpha' parameter comes in. 

So, bubbles are cool - but some times you don't want the bubbles to be able to mush and float around so much. You want your bubbles to stay off one another. We can expand the idea of a custom force to use it for collision detection and avoidance. We see how this functions in code, and see implementations in NY Times bubble cloud and my bubble cloud example.

Ok, we've got nodes. Let's add some links. Finally! Links, or edges, in a force layout constrain the nodes. They have a source and destination and can have other data associated with them too. 

Link Distance  effect how links work. And this attribute, like the 'charge' attribute, can be data-driven. In fact that is what I did with visualizing the racial divide. Here, each census tract is connected to neighbors via invisible links. The link length is now determined by the difference in ratios of white/black populations between tracts. The idea here is that empty space between sharply dividing neighborhoods could tell us something about how these communities are affected. 

Ok, lets build on the concept of the 'custom force' and see how it can be used to create whole new layouts using the force layout mechanics. 

First up, my circle-based layout examples. Talk about using sine/cosine for radial placement. 

Then look at the 'expanding center node' example - which kind of looks like a Kill Bill fight. 

Moritz Stefaner has some interesting adaptations of the force layout one is the use of an underlying grid that regulates the visual position of the nodes. There are actually two 'nodes' here - one is the one we see - which snaps to the grid. The other is used to position the visual node - and it is affected by neighboring node forces. I think it would be fun to explore this grid layout more. Think automatically generated transit maps. Similar to what Fathom has recently done with the MBTA locations.

We end with a quick look at a few more examples of using the parameters for the force layout in interesting ways - from whimsical to more rigorous:

* is Obama president - uses custom force to simulate negative gravity - so balloons float. Also uses collision detection and expanding charge on hover. 
* shape of my library by Sarah Groff-Palermo uses collision and custom forces to provide quantitative visuals about categorical data.
* this idea is taken to a more production level with Disqus's new 'Gravity' screen - which groups topics of similar interest using the same mechanism, adding real-time updates. 

So hopefully we now have a greater understanding of the magic behind the force. 

So get out there and abuse the force today!

Thanks.

h2. NOTES


charge: A negative value results in node repulsion, while a positive value results in node attraction.

gravity: A weak geometric constraint similar to a virtual spring connecting each node to the center of the layout's size. This approach has nice properties: near the center of the layout, the gravitational strength is almost zero, avoiding any local distortion of the layout

linkDistance: length of the links

linkStrength: rigidity of links

Mike Bostock's notes on 'jitter': The collide function takes alpha, just like gravity. "Jitter" typically connotes added randomness.
An alpha greater than 0.5 would overcompensate for collision, moving farther apart than is necessary to resolve constraint.

Senate Vis Title: "What does the Senate have in common with single-celled organisms? This diagram."
Remake of one in Beautiful Visualization

Is Barack Obama President by The Guardian

Shape of my Library by Sarah Groff-Palermo - UX Designer in San Francisco

Fathom Subway: How much geography can we do without?


h2. TODO

* implement multiple force on bubble chart

h2. Slide Ideas

* Intro to D3 Force "api":https://github.com/mbostock/d3/wiki/Force-Layout
** what makes a force directed layout - just bubbles
** source code for basic force
** multiple bubbles - "this demo":http://bl.ocks.org/1062383 has fun fly in
** gravity
** charge

* Bubble Chart
** gates bubble chart example?
** bubble chart code
** bubble chart example with overlap
** custom charge per node
** correct bubble chart
** nyt example?
** multiple custom forces

* Custom Forces
** node data - show what data nodes have
** code for custom tick force
** example - no alpha
** simulated annealing
** alpha
** example - alpha
** gates example
** multiple forces working - nyt example
** add version of gates that includes this tweak?

* Collision Detection
** nyt bubble cloud example
** book bubble cloud example
** basic collision code
** add mouse like in: http://bl.ocks.org/GerHobbelt/3116713 
** quadtrees
** quadtree view
** quadtree code
** book example
** word cloud quote

* Custom Nodes
** other symbols example: http://bl.ocks.org/mbostock/1062383
** images example: http://bl.ocks.org/mbostock/950642
** states force directed example: http://mbostock.github.com/d3/talk/20111018/force-states.html

* Nodes & Edges
** basic example
** code for basic example
** edge link
** edge strength
** data based edge strength
** racial divide map
** edge custom styles?
** curved edges?: http://bl.ocks.org/mbostock/4600693
** adding and removing edges
** senate social network: http://news.yahoo.com/senate-social-network-diagram-mcconnell-mean-girls-000513361.html
** game of thrones places: http://www.jeromecukier.net/projects/agot/places.html
** add/remove edges code

* Custom Layouts
** use of custom force
** moving between layouts
** flowing data example
** stowers collaboration example
** circle layout code
** spiral layout code?
** sunflower layout?

* More Custom Layouts
** clustered forces layout: http://bl.ocks.org/mbostock/1747543
** grid layout: http://moritzstefaner.github.com/gridexperiments/
** force directed labels?
** my other stowers attempts?

* Big Finish?!?
** Could be grid layout with NYC metro locations
** could be Nature of Code basic example... 

** hull on top of particle emitter ... synced to music?
** planaira moving about?

